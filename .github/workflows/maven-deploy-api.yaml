name: Deploy on Maven Central
on:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Generate new GPG key
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          cat > gen-key-script <<-EOF
          %no-protection
          %transient-key
          Key-Type: RSA
          Key-Length: 2048
          Subkey-Type: RSA
          Subkey-Length: 2048
          Name-Real: Luiz Fernandes de Oliveira
          Name-Email: luizfernandesoliveiraoficial@gmail.com
          Expire-Date: 1d
          EOF
          gpg --batch --gen-key gen-key-script
          GPG_KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | cut -d'/' -f2)
          echo "GPG_KEY_ID=$GPG_KEY_ID" >> $GITHUB_ENV
      - name: Export and send GPG public key to keyserver
        run: |
          gpg --keyserver keyserver.ubuntu.com --send-keys $GPG_KEY_ID

      - name: Build and prepare artifacts
        env:
          GPG_KEY_ID: ${{ env.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn clean verify -Dgpg.keyname=$GPG_KEY_ID -Dgpg.passphrase=$GPG_PASSPHRASE

      - name: Create bundle.zip
        run: |
          mkdir -p target/bundle
          cp -R target/*.jar target/bundle/
          cp pom.xml target/bundle/
          cd target/bundle
          zip -r ../bundle.zip .

      - name: Upload bundle.zip to Maven Central
        env:
          CENTRAL_API_TOKEN: ${{ secrets.CENTRAL_API_TOKEN }}
        run: |
          RESPONSE=$(curl -s -F "file=@target/bundle.zip" -H "Authorization: Basic $CENTRAL_API_TOKEN" "https://central.sonatype.com/api/v1/publisher/upload")
          DEPLOYMENT_ID=$(echo $RESPONSE | jq -r '.deploymentId')
          echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV
      - name: Wait for deployment to be processed
        run: |
          while true; do
            STATUS=$(curl -s -H "Authorization Basic $CENTRAL_API_TOKEN" "https://central.sonatype.com/api/v1/publisher/status/$DEPLOYMENT_ID" | jq -r '.deploymentState')
            if [ "$STATUS" == "VALIDATED" ]; then
              break
            elif [ "$STATUS" == "VALIDATED" ]; then
                echo "Deployment failed"
                exit 1
            fi
            sleep 2
          done

#      - name: Publish artifacts on Maven Central
#        env:
#          CENTRAL_API_TOKEN: ${{ secrets.CENTRAL_API_TOKEN }}
#          DEPLOYMENT_ID: ${{ env.DEPLOYMENT_ID }}
#        run: |
#          curl -X POST -H "Authorization: Bearer $CENTRAL_API_TOKEN" "https://central.sonatype.com/api/v1/publisher/publish/$DEPLOYMENT_ID"